*- Ignore press after it's been registered
*- Show GUI of upcoming taps
*- Refactor into OO style
*- Refactor key map
*- Proper GUI (remove x_for_char shit)
*- Work out how to implement double-kick
*- Allow for multiple keys per segment
*- Show kind=doublekick as rectangle (alternating smaller dots)
*- Refactor UI into set of Lane objects
*- Move lane rendering into Lane
*- Taps rendering angled for perspective (coming from the distance)
*- Taps scaled to imply distance
*- Taps speed normalised to imply distance (slower to faster but equal to static speed)
*- Draw static background with angled lanes, etc
*- Constantly moving side railings to indicate movement when no taps approaching
*- Refactor railings and taps to be one "moveable" so that progress() and render() can be generalised
*- Fix bug for when to create railing now that it's relative to song position
*- Allow for blast beats
*- Show score correctly (with words for streaks)
*- Implement gamestates
*- Data for Manic Demise (intro at least)
*- Implement menu and song picker
*- Finish data for Manic Demise
*- Show overall score and rank after song (gamestate: finish)
*- Correctly show score and rank in gamestate=results
*- Upgrade to Love 11.0
*- Setup directory strucure for code and refactor
*- Allow for right-handed players to switch gamepad (a->d, b->c, c->b, d->a)
- Make a Tap object (with attributes and render method (tap, blastbeat, doublekick, etc))
- Implement blood transition
- Finish data for Ritual
- Design and build overall GUI
